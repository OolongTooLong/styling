{"version":3,"sources":["_grid.scss","index.css","../../_utilities/_mixins/_media-query.scss","../../_utilities/_mixins/_family-mixin.scss"],"names":[],"mappings":"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","file":"grid.css","sourcesContent":["@use '../../_utilities/_mixins/media-query' as *;\n@use '../../_utilities/_mixins/family-mixin' as *;\n@use \"../../_abstracts/breakpoints\" as *;\n\n@supports (display: grid) {\n  .grid-row {\n    align-items: stretch;\n    display: grid;\n    grid-auto-flow: dense;\n    grid-auto-rows: minmax(min-content, max-content);\n    grid-template-columns: [full-start] minmax(calc(calc(100% - 1650px) / 2), 1fr) [main-start] repeat(24, [col-start] 1fr) [main-end] minmax(calc(calc(100% - 1650px) / 2), 1fr) [full-end];\n    grid-template-rows: auto;\n    //max-width: calc(var(--measure) * 5);\n    position: relative;\n    overflow: hidden;\n    grid-gap: 0;\n  }\n  .grid, .no-grid {\n    z-index: 2;\n    align-items: stretch;\n    display: grid;\n    grid-auto-flow: dense;\n\n    &.xxx-narrow {\n      grid-column-start: 9;\n      grid-column-end: 19;\n      @include mq(medium) {\n        grid-column-start: 8;\n        grid-column-end: 20;\n      }\n      @include mq(tablet) {\n        grid-column-start: 7;\n        grid-column-end: 21;\n      }\n      @include mq(phablet) {\n        grid-column-start: 5;\n        grid-column-end: 23;\n      }\n      @each $breakpointName, $breakpointValue in $breakpoints {\n        @include mq-min($breakpointName) {\n          &-#{$breakpointName} {\n            grid-column-start: 10;\n            grid-column-end: 18;\n          }\n        }\n      }\n    }\n\n    &.xx-narrow {\n      grid-column-start: 8;\n      grid-column-end: 20;\n      @include mq(tablet) {\n        grid-column-start: 5;\n        grid-column-end: 23;\n      }\n      @each $breakpointName, $breakpointValue in $breakpoints {\n        @include mq-min($breakpointName) {\n          &-#{$breakpointName} {\n            grid-column-start: 6;\n            grid-column-end: 22;\n          }\n        }\n      }\n    }\n\n    &.x-narrow {\n      grid-column-start: 7;\n      grid-column-end: 21;\n      @include mq(medium) {\n        grid-column-start: 6;\n        grid-column-end: 22;\n      }\n      @include mq(tablet) {\n        grid-column-start: 5;\n        grid-column-end: 23;\n      }\n      @each $breakpointName, $breakpointValue in $breakpoints {\n        @include mq-min($breakpointName) {\n          &-#{$breakpointName} {\n            grid-column-start: 8;\n            grid-column-end: 20;\n          }\n        }\n      }\n    }\n\n    &.narrow {\n      grid-column-start: 6;\n      grid-column-end: 22;\n      @include mq(tablet) {\n        grid-column-start: 5;\n        grid-column-end: 23;\n      }\n      @include mq(phablet) {\n        grid-column-start: 4;\n        grid-column-end: 24;\n      }\n    }\n\n\n    grid-column-start: 5;\n    grid-column-end: 23;\n    @include mq(phablet) {\n      grid-column-start: 4;\n      grid-column-end: 24;\n    }\n\n    &.wide {\n      grid-column-start: 4;\n      grid-column-end: 24;\n    }\n\n    &.x-wide {\n      grid-column-start: 3;\n      grid-column-end: 25;\n    }\n\n    &.xx-wide {\n      grid-column-start: 2;\n      grid-column-end: 26;\n    }\n\n    &.xxx-wide {\n      grid-column-start: 1;\n      grid-column-end: 27;\n    }\n\n    &.right-full {\n      @include mq-min(tablet) {\n        grid-column-end: -1;\n      }\n    }\n\n    &.left-full {\n      @include mq-min(tablet) {\n        grid-column-end: -1;\n      }\n    }\n  }\n  .grid {\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n    @include mq(large-tablet) {\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    }\n    @include mq(tablet) {\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    }\n    @include mq(mobile) {\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    }\n\n    &.micro-blocks {\n      grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));\n    }\n\n    &.tiny-blocks {\n      grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n    }\n\n    &.small-blocks {\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    }\n\n    &.large-blocks {\n      grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));\n      @include mq(phablet) {\n        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n      }\n    }\n\n    &.extra-large-blocks {\n      grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n      @include mq(tablet) {\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n      }\n    }\n  }\n  .grid-flex {\n    display: flex;\n    grid-column-start: 5;\n    grid-column-end: 23;\n    gap: var(--s1);\n    justify-content: space-between;\n\n    &.masonry {\n      flex-wrap: wrap;\n    }\n  }\n\n  .has-one-column {\n    display: grid;\n    grid-template-columns: repeat(1, minmax(200px, 1fr));\n  }\n  .has-two-columns {\n    grid-template-columns: repeat(2, minmax(250px, 1fr));\n\n    &:nth-child(1n) {\n      display: grid;\n    }\n\n    @include mq(tablet) {\n      &:not(.ignore-tablet) {\n        grid-template-columns: 1fr;\n      }\n    }\n    @include mq(phablet) {\n      &:not(.ignore-phablet) {\n        grid-template-columns: 1fr;\n      }\n    }\n    @include mq(mobile) {\n      &:not(.ignore-mobile) {\n        grid-template-columns: 1fr;\n      }\n    }\n\n    &.left-wide {\n      grid-template-columns: repeat(10, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(2n+1) {\n          grid-column: auto/ span 6;\n        }\n\n        *:nth-child(2n+2) {\n          grid-column: auto/ span 4;\n        }\n      }\n\n      @include mq(large-tablet) {\n        &:not(.ignore-large-tablet) {\n          & > {\n            *:nth-child(2n+1) {\n              grid-column: auto/ span 5;\n              grid-row: 1;\n            }\n\n            *:nth-child(2n+2) {\n              grid-column: auto/ span 5;\n              grid-row: 1;\n            }\n          }\n        }\n      }\n      @include mq(tablet) {\n        &:not(.ignore-tablet) {\n          & > {\n            *:nth-child(2n+1) {\n              grid-column: auto/ span 10;\n              grid-row: unset;\n            }\n\n            *:nth-child(2n+2) {\n              grid-column: auto/ span 10;\n              grid-row: unset;\n            }\n          }\n        }\n      }\n    }\n\n    &.right-wide {\n      grid-template-columns: repeat(10, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(2n+1) {\n          grid-column: auto/ span 4;\n        }\n\n        *:nth-child(2n+2) {\n          grid-column: auto/ span 6;\n        }\n      }\n\n      @include mq(large-tablet) {\n        &:not(.ignore-large-tablet) {\n          & > {\n            *:nth-child(2n+1) {\n              grid-column: auto/ span 5;\n              grid-row: 1;\n            }\n\n            *:nth-child(2n+2) {\n              grid-column: auto/ span 5;\n              grid-row: 1;\n            }\n          }\n        }\n      }\n      @include mq(tablet) {\n        &:not(.ignore-tablet) {\n          & > {\n            *:nth-child(2n+1) {\n              grid-column: auto/ span 10;\n              grid-row: unset;\n            }\n\n            *:nth-child(2n+2) {\n              grid-column: auto/ span 10;\n              grid-row: unset;\n            }\n          }\n        }\n      }\n    }\n\n    &.left-wider {\n      grid-template-columns: repeat(3, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(2n+1) {\n          grid-column: auto/ span 2;\n        }\n\n        *:nth-child(2n+2) {\n          grid-column: auto/ span 1;\n        }\n      }\n\n      @include mq(tablet) {\n        &:not(.ignore-tablet) {\n          grid-template-columns: repeat(2, 1fr);\n\n          & > {\n            *:nth-child(1n+1) {\n              grid-column: auto/ span 3;\n            }\n          }\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-phablet) {\n          grid-template-columns: 1fr;\n        }\n      }\n      @include mq(mobile) {\n        &:not(.ignore-mobile) {\n          grid-template-columns: 1fr;\n        }\n      }\n    }\n\n    &.right-wider {\n      grid-template-columns: repeat(3, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(2n+1) {\n          grid-column: auto/ span 1;\n        }\n\n        *:nth-child(2n+2) {\n          grid-column: auto/ span 2;\n        }\n      }\n\n      @include mq(tablet) {\n        &:not(.ignore-tablet) {\n          grid-template-columns: repeat(2, 1fr);\n\n          & > {\n            *:nth-child(1n+1) {\n              grid-column: auto/ span 3;\n            }\n          }\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-phablet) {\n          grid-template-columns: 1fr;\n        }\n      }\n      @include mq(mobile) {\n        &:not(.ignore-mobile) {\n          grid-template-columns: 1fr;\n        }\n      }\n    }\n\n    &.left-stack {\n      grid-template: auto/ repeat(8, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(1n) {\n          grid-column: auto/ span 4;\n          grid-row: auto;\n        }\n\n        *:nth-last-child(1) {\n          grid-column: 5/ span 4;\n          grid-row: 1 / span 3\n        }\n      }\n\n      @include mq(tablet) {\n        &:not(.ignore-tablet) {\n          & > {\n            *:nth-child(1n+1) {\n              grid-column: auto/ span 8;\n              grid-row: auto;\n            }\n          }\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-phablet) {\n          & > {\n            *:nth-child(1n+1) {\n              grid-column: auto/ span 8;\n              grid-row: auto;\n            }\n          }\n        }\n      }\n    }\n\n    &.right-stack {\n      grid-template: auto / repeat(8, minmax(0, 1fr));\n\n      & > * {\n        &:nth-child(1) {\n          grid-column: 1/ span 4;\n          grid-row: 1 / span 3\n        }\n\n        @include after-first(1) {\n          grid-column: 5 / span 4;\n          grid-row: auto / span all;\n        }\n      }\n\n      @include mq(tablet) {\n        &:not(.ignore-tablet) {\n          & > {\n            *:nth-child(1n+1) {\n              grid-column: auto/ span 8;\n              grid-row: auto;\n            }\n          }\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-phablet) {\n          & > {\n            *:nth-child(1n+1) {\n              grid-column: auto/ span 8;\n              grid-row: auto;\n            }\n          }\n        }\n      }\n    }\n\n    &.left-split-stack {\n      grid-template: repeat(3, auto) / repeat(10, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(5n+1) {\n          grid-row: 1 / span 1;\n          grid-column: 1 / span 6;\n        }\n\n        *:nth-child(5n+2) {\n          grid-row: 2 / span 1;\n          grid-column: 1 / span 3;\n        }\n\n        *:nth-child(5n+3) {\n          grid-row: 2 / span 1;\n          grid-column: 4 / span 3;\n        }\n\n        *:nth-child(5n+4) {\n          grid-row: 3/span 1;\n          grid-column: 1/span 6;\n        }\n\n        *:nth-child(5n+5) {\n          grid-row: 1/span 3;\n          grid-column: 7/span 4;\n        }\n      }\n\n      @include mq(medium-large) {\n        grid-template: repeat(3, auto) / repeat(12, 1fr);\n\n        & > {\n          *:nth-child(5n+1) {\n            grid-row: 1 / span 1;\n            grid-column: 1/span 6;\n          }\n\n          *:nth-child(5n+2) {\n            grid-column: 1/span 3;\n            grid-row: 2/span 1;\n          }\n\n          *:nth-child(5n+3) {\n            grid-column: 4/span 3;\n            grid-row: 2/span 1;\n          }\n\n          *:nth-child(5n+4) {\n            grid-column: 1/span 6;\n            grid-row: 3/span 1;\n          }\n\n          *:nth-child(5n+5) {\n            grid-column: 7/span 6;\n            grid-row: 1/span 3;\n          }\n        }\n      }\n      @include mq(large-tablet) {\n        &:not(.ignore-large-tablet) {\n          grid-template: repeat(4, auto)/repeat(2, minmax(100px, 1fr));\n\n          & > {\n            *:nth-child(5n+1) {\n              grid-column: 1/ span 2;\n              grid-row: 4 / span 2;\n            }\n\n            *:nth-child(5n+2) {\n              grid-column: 1 / span 2;\n              grid-row: 2 / span 1;\n            }\n\n            *:nth-child(5n+3) {\n              grid-column: 1/ span 1;\n              grid-row: 3 / span 1;\n            }\n\n            *:nth-child(5n+4) {\n              grid-column: 2/span 1;\n              grid-row: 3 / span 1;\n            }\n\n            *:nth-child(5n+5) {\n              grid-column: 1 / span 2;\n              grid-row: 1 / span 1;\n\n            }\n          }\n        }\n      }\n    }\n\n    &.right-split-stack {\n      grid-template: repeat(3, auto) / repeat(10, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(5n+1) {\n          grid-row: 1/-1;\n          grid-column: 1/span 4;\n        }\n\n        *:nth-child(5n+2) {\n          grid-column: 5/span 6;\n          grid-row: 1/span 1;\n        }\n\n        *:nth-child(5n+3) {\n          grid-column: 5/span 3;\n          grid-row: 2/span 1;\n        }\n\n        *:nth-child(5n+4) {\n          grid-column: 8/span 3;\n          grid-row: 2/span 1;\n        }\n\n        *:nth-child(5n+5) {\n          grid-column: 5/span 6;\n          grid-row: 3/span 1;\n        }\n      }\n\n      @include mq(medium-large) {\n        grid-template: repeat(3, auto) / repeat(12, 1fr);\n\n        & > {\n          *:nth-child(5n+1) {\n            grid-row: 1/-1;\n            grid-column: 1/span 6;\n          }\n\n          *:nth-child(5n+2) {\n            grid-column: 7/span 6;\n            grid-row: 1/span 1;\n          }\n\n          *:nth-child(5n+3) {\n            grid-column: 7/span 3;\n            grid-row: 2/span 1;\n          }\n\n          *:nth-child(5n+4) {\n            grid-column: 10/span 3;\n            grid-row: 2/span 1;\n          }\n\n          *:nth-child(5n+5) {\n            grid-column: 7/span 6;\n            grid-row: 3/span 1;\n          }\n        }\n      }\n      @include mq(large-tablet) {\n        &:not(.ignore-large-tablet) {\n          grid-template: repeat(4, auto)/repeat(2, minmax(100px, 1fr));\n\n          & > {\n            *:nth-child(5n+1) {\n              grid-column: 1 / span 2;\n              grid-row: 1 / span 1;\n            }\n\n            *:nth-child(5n+2) {\n              grid-column: 1 / span 2;\n              grid-row: 2 / span 1;\n            }\n\n            *:nth-child(5n+3) {\n              grid-column: 1/ span 1;\n              grid-row: 3 / span 1;\n            }\n\n            *:nth-child(5n+4) {\n              grid-column: 2/span 1;\n              grid-row: 3 / span 1;\n            }\n\n            *:nth-child(5n+5) {\n              grid-column: 1/ span 2;\n              grid-row: 4 / span 2;\n            }\n          }\n        }\n      }\n    }\n  }\n  .has-three-columns {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n    @include mq(large-tablet) {\n      &:not(.ignore-large-tablet) {\n        grid-template-columns: repeat(2, 1fr);\n\n        & > {\n          *:nth-child(1n+1) {\n            grid-column: auto/ span 1;\n          }\n\n          *:nth-last-child(1) {\n            grid-column: auto/ span 2;\n          }\n        }\n      }\n    }\n    @include mq(tablet) {\n      &:not(.ignore-tablet) {\n        grid-template-columns: repeat(1, 1fr);\n\n        & > {\n          *:nth-child(1n+1) {\n            grid-column: auto/ span 1;\n          }\n        }\n      }\n    }\n    @include mq(mobile) {\n      &:not(.ignore-mobile) {\n        grid-template-columns: repeat(1, 1fr);\n      }\n    }\n\n    &.left-wide {\n      grid-template: auto / repeat(8, 1fr);\n\n      & > {\n        *:nth-child(3n+1) {\n          grid-column: auto/ span 4;\n        }\n\n        *:nth-child(3n+2) {\n          grid-column: auto/span 2;\n        }\n\n        *:nth-child(3n+3) {\n          grid-column: auto /span 2;\n        }\n      }\n\n      @include mq(medium) {\n        &:not(.ignore-medium) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 4;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 4;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(large-tablet) {\n        & > {\n          *:nth-child(3n+1) {\n            grid-column: auto/ span 4;\n          }\n\n          *:nth-child(3n+2) {\n            grid-column: auto/span 4;\n          }\n\n          *:nth-child(3n+3) {\n            grid-column: auto /span 8;\n          }\n        }\n        &:not(.ignore-large-tablet) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 4;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 4;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(tablet) {\n        & > {\n          *:nth-child(3n+1) {\n            grid-column: auto/ span 4;\n          }\n\n          *:nth-child(3n+2) {\n            grid-column: auto/span 4;\n          }\n\n          *:nth-child(3n+3) {\n            grid-column: auto /span 8;\n          }\n        }\n        &:not(.ignore-tablet) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 8;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 8;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-phablet) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 8;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 8;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(mobile) {\n        &:not(.ignore-mobile) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 8;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 8;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(small-mobile) {\n        & > {\n          *:nth-child(3n+1) {\n            grid-column: auto/ span 8;\n          }\n\n          *:nth-child(3n+2) {\n            grid-column: auto/span 8;\n          }\n\n          *:nth-child(3n+3) {\n            grid-column: auto /span 8;\n          }\n        }\n      }\n    }\n\n    &.right-wide {\n      grid-template: 1fr / repeat(8, 1fr);\n\n      & > {\n        *:nth-child(3n+1) {\n          grid-column: auto/ span 2;\n        }\n\n        *:nth-child(3n+2) {\n          grid-column: auto/span 2;\n        }\n\n        *:nth-child(3n+3) {\n          grid-column: auto /span 4;\n        }\n      }\n\n      @include mq(medium) {\n        &:not(.ignore-medium) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 4;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 4;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(large-tablet) {\n        & > {\n          *:nth-child(3n+1) {\n            grid-column: auto/ span 4;\n          }\n\n          *:nth-child(3n+2) {\n            grid-column: auto/span 4;\n          }\n\n          *:nth-child(3n+3) {\n            grid-column: auto /span 8;\n          }\n        }\n        &:not(.ignore-large-tablet) {\n\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 4;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 4;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(tablet) {\n        & > {\n          *:nth-child(3n+1) {\n            grid-column: auto/ span 4;\n          }\n\n          *:nth-child(3n+2) {\n            grid-column: auto/span 4;\n          }\n\n          *:nth-child(3n+3) {\n            grid-column: auto /span 8;\n          }\n        }\n        &:not(.ignore-tablet) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 8;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 8;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-phablet) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 8;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 8;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(mobile) {\n        &:not(.ignore-mobile) {\n          & > {\n            *:nth-child(3n+1) {\n              grid-column: auto/ span 8;\n            }\n\n            *:nth-child(3n+2) {\n              grid-column: auto/span 8;\n            }\n\n            *:nth-child(3n+3) {\n              grid-column: auto /span 8;\n            }\n          }\n        }\n      }\n      @include mq(small-mobile) {\n        & > {\n          *:nth-child(3n+1) {\n            grid-column: auto/ span 8;\n          }\n\n          *:nth-child(3n+2) {\n            grid-column: auto/span 8;\n          }\n\n          *:nth-child(3n+3) {\n            grid-column: auto /span 8;\n          }\n        }\n      }\n    }\n\n    &.featuredPost {\n      grid-template-columns: repeat(3, 1fr);\n\n      & {\n        *:nth-child(1) {\n          grid-column: 1 / -1;\n\n          &.card {\n            display: grid;\n            grid-template-columns: repeat(10, 1fr);\n            column-gap: inherit;\n            @include mq(tablet) {\n              &:not(.ignore-tablet) {\n                & > {\n                  *:nth-child(2n+1) {\n                    grid-column: auto/ span 10;\n                  }\n\n                  *:nth-child(2n+2) {\n                    grid-column: auto/ span 10;\n                    grid-row: 2;\n                  }\n                }\n              }\n            }\n\n            .imglink {\n              grid-column: 5/ span 6;\n              grid-row: 1;\n            }\n\n            .inner {\n              grid-column: 1 / span 4;\n              grid-row: 1;\n              display: flex;\n              flex-direction: column;\n              justify-content: center;\n              align-content: center;\n\n            }\n          }\n        }\n      }\n\n      @include mq(large-tablet) {\n        &:not(.ignore-large-tablet) {\n          grid-template-columns: repeat(2, 1fr);\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-mobile) {\n          grid-template-columns: repeat(1, 1fr);\n        }\n      }\n    }\n  }\n  .has-four-columns {\n    display: grid;\n    grid-template-columns:  repeat(auto-fit, minmax(170px, 1fr));\n\n    &.grid-four {\n      grid-template: repeat(2, auto) / repeat(2, minmax(0, 1fr));\n      @include mq(phablet) {\n        &:not(.ignore-phablet) {\n          grid-template-columns: 1fr;\n        }\n      }\n      @include mq(mobile) {\n        &.ignore-phablet {\n          grid-template-columns: 1fr;\n        }\n      }\n    }\n\n    &.uneven-grid {\n      grid-template: repeat(3, auto) / repeat(2, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(4n+1) {\n          grid-row: 1 / span 1;\n          grid-column: 1 / span 1;\n        }\n\n        *:nth-child(4n+2) {\n          grid-row: 1 / span 2;\n          grid-column: 2 / span 1;\n        }\n\n        *:nth-child(4n+3) {\n          grid-row: 2 / span 2;\n          grid-column: 1 / span 1;\n        }\n\n        *:nth-child(4n+4) {\n          grid-row: 3 / span 1;\n          grid-column: 2 / span 1;\n        }\n      }\n\n      @include mq(large-tablet) {\n        &:not(.ignore-large-tablet) {\n          grid-template-columns: 1fr;\n\n          & > {\n            *:nth-child(1n+1) {\n              grid-row: auto / span 1;\n              grid-column: 1 / span 1;\n            }\n\n            *:nth-child(4n+2) {\n            }\n\n            *:nth-child(4n+3) {\n            }\n\n            *:nth-child(4n+4) {\n            }\n          }\n        }\n      }\n      @include mq(tablet) {\n        &:not(.ignore-large-tablet) {\n          & > {\n            *:nth-child(4n+1) {\n            }\n\n            *:nth-child(4n+2) {\n            }\n\n            *:nth-child(4n+3) {\n            }\n\n            *:nth-child(4n+4) {\n            }\n          }\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-large-tablet) {\n          & > {\n            *:nth-child(4n+1) {\n            }\n\n            *:nth-child(4n+2) {\n            }\n\n            *:nth-child(4n+3) {\n            }\n\n            *:nth-child(4n+4) {\n            }\n          }\n        }\n      }\n    }\n\n    &.uneven-grid-flipped {\n      grid-template: repeat(3, auto) / repeat(2, minmax(0, 1fr));\n\n      & > {\n        *:nth-child(4n+1) {\n          grid-row: 1 / span 2;\n          grid-column: 1 / span 1;\n        }\n\n        *:nth-child(4n+2) {\n          grid-row: 1 / span 1;\n          grid-column: 2 / span 1;\n        }\n\n        *:nth-child(4n+3) {\n          grid-row: 3 / span 1;\n          grid-column: 1 / span 1;\n        }\n\n        *:nth-child(4n+4) {\n          grid-row: 2 / span 2;\n          grid-column: 2 / span 1;\n        }\n      }\n\n      @include mq(large-tablet) {\n        &:not(.ignore-large-tablet) {\n          & > {\n            *:nth-child(4n+1) {\n            }\n\n            *:nth-child(4n+2) {\n            }\n\n            *:nth-child(4n+3) {\n            }\n\n            *:nth-child(4n+4) {\n            }\n          }\n        }\n      }\n      @include mq(tablet) {\n        &:not(.ignore-large-tablet) {\n          & > {\n            *:nth-child(4n+1) {\n            }\n\n            *:nth-child(4n+2) {\n            }\n\n            *:nth-child(4n+3) {\n            }\n\n            *:nth-child(4n+4) {\n            }\n          }\n        }\n      }\n      @include mq(phablet) {\n        &:not(.ignore-large-tablet) {\n          & > {\n            *:nth-child(4n+1) {\n            }\n\n            *:nth-child(4n+2) {\n            }\n\n            *:nth-child(4n+3) {\n            }\n\n            *:nth-child(4n+4) {\n            }\n          }\n        }\n      }\n    }\n\n  }\n  .has-five-columns {\n    grid-template: repeat(1, auto) / repeat(5, 1fr);\n    @include mq(medium) {\n      &:not(.ignore-medium) {\n        grid-template: auto / repeat(12, 1fr);\n\n        & > {\n          *:nth-child(1n+1) {\n            grid-column: auto/ span 4;\n          }\n\n          *:nth-child(5n+4) {\n            grid-column: 3/ span 4;\n          }\n\n          *:nth-child(5n+5) {\n            grid-column: auto/ span 4;\n          }\n        }\n      }\n    }\n    @include mq(large-tablet) {\n      &:not(.ignore-large-tablet) {\n        grid-template: auto / repeat(4, 1fr);\n\n        & > {\n          *:nth-child(1n+1) {\n            grid-column: auto/ span 2;\n          }\n\n          *:nth-last-child(1) {\n            grid-column: auto/ span 4;\n          }\n        }\n      }\n    }\n    @include mq(tablet) {\n      &:not(.ignore-tablet) {\n        grid-template: auto / repeat(2, 1fr);\n\n        & > {\n          *:nth-child(1n+1) {\n            grid-column: auto/ span 2;\n          }\n        }\n      }\n    }\n    @include mq(phablet) {\n      &:not(.ignore-phablet) {\n        grid-template: auto / repeat(2, 1fr);\n\n        & > {\n          *:nth-child(1n+1) {\n            grid-column: auto/ span 2;\n\n          }\n        }\n      }\n    }\n\n    &.grid-right {\n\n    }\n\n    &.grid-left {\n      grid-template: repeat(3, auto) / repeat(4, auto);\n\n      & > {\n        *:nth-child(5n+1) {\n          grid-column: 1 / span 2;\n          grid-row: 1 / span 1;\n        }\n\n        *:nth-child(5n+2) {\n          grid-column: 1/ span 1;\n          grid-row: 2 / span 1;\n        }\n\n        *:nth-child(5n+3) {\n          grid-column: 2/ span 1;\n          grid-row: 2 / span 1;\n        }\n\n        *:nth-child(5n+4) {\n          grid-column: 1/ span 2;\n          grid-row: 3 / span 1;\n        }\n\n        *:nth-child(5n+5) {\n          grid-column: 3/ span 2;\n          grid-row: 1 / span 3;\n        }\n      }\n\n      @include mq(large-tablet) {\n        & > {\n          *:nth-child(5n+1) {\n            grid-column: 1/ span 4;\n            grid-row: 2 / span 2;\n          }\n\n          *:nth-child(5n+2) {\n            grid-column: 1 / span 2;\n            grid-row: 4 / span 1;\n          }\n\n          *:nth-child(5n+3) {\n            grid-column: 3/ span 2;\n            grid-row: 4 / span 1;\n          }\n\n          *:nth-child(5n+4) {\n            grid-column: 1/ span 4;\n            grid-row: 5 / span 1;\n          }\n\n          *:nth-child(5n+5) {\n            grid-column: 1 / span 4;\n            grid-row: 1 / span 1;\n          }\n        }\n      }\n    }\n  }\n  .has-six-columns {\n    grid-template: repeat(1, auto) / repeat(6, 1fr);\n\n    @include mq(medium-large) {\n      &:not(.ignore-large-medium) {\n        grid-template: repeat(2, auto) / repeat(3, 1fr);\n      }\n    }\n    @include mq(medium) {\n      &:not(.ignore-medium) {\n        grid-template: repeat(2, auto) / repeat(2, 1fr);\n      }\n    }\n    @include mq(tablet) {\n      &:not(.ignore-tablet) {\n        grid-template: repeat(3, auto) / repeat(1, 1fr);\n      }\n    }\n    @include mq(phablet) {\n      &:not(.ignore-mobile) {\n        grid-template: repeat(6, auto) / 1fr;\n      }\n    }\n  }\n}\n","@supports (display: grid) {\n  .grid-row {\n    align-items: stretch;\n    display: grid;\n    grid-auto-flow: dense;\n    grid-auto-rows: minmax(min-content, max-content);\n    grid-template-columns: [full-start] minmax(calc((100% - 1650px) / 2), 1fr) [main-start] repeat(24, [col-start] 1fr) [main-end] minmax(calc((100% - 1650px) / 2), 1fr) [full-end];\n    grid-template-rows: auto;\n    position: relative;\n    overflow: hidden;\n    grid-gap: 0;\n  }\n\n  .grid, .no-grid {\n    z-index: 2;\n    align-items: stretch;\n    display: grid;\n    grid-auto-flow: dense;\n    grid-column-start: 5;\n    grid-column-end: 23;\n  }\n  .grid.xxx-narrow, .no-grid.xxx-narrow {\n    grid-column-start: 9;\n    grid-column-end: 19;\n  }\n  @media only screen and (max-width: 1000px) {\n    .grid.xxx-narrow, .no-grid.xxx-narrow {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .grid.xxx-narrow, .no-grid.xxx-narrow {\n      grid-column-start: 7;\n      grid-column-end: 21;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .grid.xxx-narrow, .no-grid.xxx-narrow {\n      grid-column-start: 5;\n      grid-column-end: 23;\n    }\n  }\n  @media only screen and (min-width: 1500px) {\n    .grid.xxx-narrow-extra-large, .no-grid.xxx-narrow-extra-large {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  @media only screen and (min-width: 1300px) {\n    .grid.xxx-narrow-large, .no-grid.xxx-narrow-large {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  @media only screen and (min-width: 1100px) {\n    .grid.xxx-narrow-medium-large, .no-grid.xxx-narrow-medium-large {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  @media only screen and (min-width: 1000px) {\n    .grid.xxx-narrow-medium, .no-grid.xxx-narrow-medium {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  @media only screen and (min-width: 920px) {\n    .grid.xxx-narrow-large-tablet, .no-grid.xxx-narrow-large-tablet {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  @media only screen and (min-width: 767px) {\n    .grid.xxx-narrow-tablet, .no-grid.xxx-narrow-tablet {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  @media only screen and (min-width: 575px) {\n    .grid.xxx-narrow-phablet, .no-grid.xxx-narrow-phablet {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  @media only screen and (min-width: 480px) {\n    .grid.xxx-narrow-mobile, .no-grid.xxx-narrow-mobile {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  @media only screen and (min-width: 375px) {\n    .grid.xxx-narrow-small-mobile, .no-grid.xxx-narrow-small-mobile {\n      grid-column-start: 10;\n      grid-column-end: 18;\n    }\n  }\n  .grid.xx-narrow, .no-grid.xx-narrow {\n    grid-column-start: 8;\n    grid-column-end: 20;\n  }\n  @media only screen and (max-width: 767px) {\n    .grid.xx-narrow, .no-grid.xx-narrow {\n      grid-column-start: 5;\n      grid-column-end: 23;\n    }\n  }\n  @media only screen and (min-width: 1500px) {\n    .grid.xx-narrow-extra-large, .no-grid.xx-narrow-extra-large {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (min-width: 1300px) {\n    .grid.xx-narrow-large, .no-grid.xx-narrow-large {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (min-width: 1100px) {\n    .grid.xx-narrow-medium-large, .no-grid.xx-narrow-medium-large {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (min-width: 1000px) {\n    .grid.xx-narrow-medium, .no-grid.xx-narrow-medium {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (min-width: 920px) {\n    .grid.xx-narrow-large-tablet, .no-grid.xx-narrow-large-tablet {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (min-width: 767px) {\n    .grid.xx-narrow-tablet, .no-grid.xx-narrow-tablet {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (min-width: 575px) {\n    .grid.xx-narrow-phablet, .no-grid.xx-narrow-phablet {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (min-width: 480px) {\n    .grid.xx-narrow-mobile, .no-grid.xx-narrow-mobile {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (min-width: 375px) {\n    .grid.xx-narrow-small-mobile, .no-grid.xx-narrow-small-mobile {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  .grid.x-narrow, .no-grid.x-narrow {\n    grid-column-start: 7;\n    grid-column-end: 21;\n  }\n  @media only screen and (max-width: 1000px) {\n    .grid.x-narrow, .no-grid.x-narrow {\n      grid-column-start: 6;\n      grid-column-end: 22;\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .grid.x-narrow, .no-grid.x-narrow {\n      grid-column-start: 5;\n      grid-column-end: 23;\n    }\n  }\n  @media only screen and (min-width: 1500px) {\n    .grid.x-narrow-extra-large, .no-grid.x-narrow-extra-large {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (min-width: 1300px) {\n    .grid.x-narrow-large, .no-grid.x-narrow-large {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (min-width: 1100px) {\n    .grid.x-narrow-medium-large, .no-grid.x-narrow-medium-large {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (min-width: 1000px) {\n    .grid.x-narrow-medium, .no-grid.x-narrow-medium {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (min-width: 920px) {\n    .grid.x-narrow-large-tablet, .no-grid.x-narrow-large-tablet {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (min-width: 767px) {\n    .grid.x-narrow-tablet, .no-grid.x-narrow-tablet {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (min-width: 575px) {\n    .grid.x-narrow-phablet, .no-grid.x-narrow-phablet {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (min-width: 480px) {\n    .grid.x-narrow-mobile, .no-grid.x-narrow-mobile {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  @media only screen and (min-width: 375px) {\n    .grid.x-narrow-small-mobile, .no-grid.x-narrow-small-mobile {\n      grid-column-start: 8;\n      grid-column-end: 20;\n    }\n  }\n  .grid.narrow, .no-grid.narrow {\n    grid-column-start: 6;\n    grid-column-end: 22;\n  }\n  @media only screen and (max-width: 767px) {\n    .grid.narrow, .no-grid.narrow {\n      grid-column-start: 5;\n      grid-column-end: 23;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .grid.narrow, .no-grid.narrow {\n      grid-column-start: 4;\n      grid-column-end: 24;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .grid, .no-grid {\n      grid-column-start: 4;\n      grid-column-end: 24;\n    }\n  }\n  .grid.wide, .no-grid.wide {\n    grid-column-start: 4;\n    grid-column-end: 24;\n  }\n  .grid.x-wide, .no-grid.x-wide {\n    grid-column-start: 3;\n    grid-column-end: 25;\n  }\n  .grid.xx-wide, .no-grid.xx-wide {\n    grid-column-start: 2;\n    grid-column-end: 26;\n  }\n  .grid.xxx-wide, .no-grid.xxx-wide {\n    grid-column-start: 1;\n    grid-column-end: 27;\n  }\n  @media only screen and (min-width: 767px) {\n    .grid.right-full, .no-grid.right-full {\n      grid-column-end: -1;\n    }\n  }\n  @media only screen and (min-width: 767px) {\n    .grid.left-full, .no-grid.left-full {\n      grid-column-end: -1;\n    }\n  }\n\n  .grid {\n    grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));\n  }\n  @media only screen and (max-width: 920px) {\n    .grid {\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .grid {\n      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .grid {\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    }\n  }\n  .grid.micro-blocks {\n    grid-template-columns: repeat(auto-fit, minmax(50px, 1fr));\n  }\n  .grid.tiny-blocks {\n    grid-template-columns: repeat(auto-fit, minmax(100px, 1fr));\n  }\n  .grid.small-blocks {\n    grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  }\n  .grid.large-blocks {\n    grid-template-columns: repeat(auto-fit, minmax(450px, 1fr));\n  }\n  @media only screen and (max-width: 575px) {\n    .grid.large-blocks {\n      grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n    }\n  }\n  .grid.extra-large-blocks {\n    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));\n  }\n  @media only screen and (max-width: 767px) {\n    .grid.extra-large-blocks {\n      grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n    }\n  }\n\n  .grid-flex {\n    display: flex;\n    grid-column-start: 5;\n    grid-column-end: 23;\n    gap: var(--s1);\n    justify-content: space-between;\n  }\n  .grid-flex.masonry {\n    flex-wrap: wrap;\n  }\n\n  .has-one-column {\n    display: grid;\n    grid-template-columns: repeat(1, minmax(200px, 1fr));\n  }\n\n  .has-two-columns {\n    grid-template-columns: repeat(2, minmax(250px, 1fr));\n  }\n  .has-two-columns:nth-child(1n) {\n    display: grid;\n  }\n  @media only screen and (max-width: 767px) {\n    .has-two-columns:not(.ignore-tablet) {\n      grid-template-columns: 1fr;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-two-columns:not(.ignore-phablet) {\n      grid-template-columns: 1fr;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .has-two-columns:not(.ignore-mobile) {\n      grid-template-columns: 1fr;\n    }\n  }\n  .has-two-columns.left-wide {\n    grid-template-columns: repeat(10, minmax(0, 1fr));\n  }\n  .has-two-columns.left-wide > *:nth-child(2n+1) {\n    grid-column: auto/span 6;\n  }\n  .has-two-columns.left-wide > *:nth-child(2n+2) {\n    grid-column: auto/span 4;\n  }\n  @media only screen and (max-width: 920px) {\n    .has-two-columns.left-wide:not(.ignore-large-tablet) > *:nth-child(2n+1) {\n      grid-column: auto/span 5;\n      grid-row: 1;\n    }\n    .has-two-columns.left-wide:not(.ignore-large-tablet) > *:nth-child(2n+2) {\n      grid-column: auto/span 5;\n      grid-row: 1;\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .has-two-columns.left-wide:not(.ignore-tablet) > *:nth-child(2n+1) {\n      grid-column: auto/span 10;\n      grid-row: unset;\n    }\n    .has-two-columns.left-wide:not(.ignore-tablet) > *:nth-child(2n+2) {\n      grid-column: auto/span 10;\n      grid-row: unset;\n    }\n  }\n  .has-two-columns.right-wide {\n    grid-template-columns: repeat(10, minmax(0, 1fr));\n  }\n  .has-two-columns.right-wide > *:nth-child(2n+1) {\n    grid-column: auto/span 4;\n  }\n  .has-two-columns.right-wide > *:nth-child(2n+2) {\n    grid-column: auto/span 6;\n  }\n  @media only screen and (max-width: 920px) {\n    .has-two-columns.right-wide:not(.ignore-large-tablet) > *:nth-child(2n+1) {\n      grid-column: auto/span 5;\n      grid-row: 1;\n    }\n    .has-two-columns.right-wide:not(.ignore-large-tablet) > *:nth-child(2n+2) {\n      grid-column: auto/span 5;\n      grid-row: 1;\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .has-two-columns.right-wide:not(.ignore-tablet) > *:nth-child(2n+1) {\n      grid-column: auto/span 10;\n      grid-row: unset;\n    }\n    .has-two-columns.right-wide:not(.ignore-tablet) > *:nth-child(2n+2) {\n      grid-column: auto/span 10;\n      grid-row: unset;\n    }\n  }\n  .has-two-columns.left-wider {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n  .has-two-columns.left-wider > *:nth-child(2n+1) {\n    grid-column: auto/span 2;\n  }\n  .has-two-columns.left-wider > *:nth-child(2n+2) {\n    grid-column: auto/span 1;\n  }\n  @media only screen and (max-width: 767px) {\n    .has-two-columns.left-wider:not(.ignore-tablet) {\n      grid-template-columns: repeat(2, 1fr);\n    }\n    .has-two-columns.left-wider:not(.ignore-tablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 3;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-two-columns.left-wider:not(.ignore-phablet) {\n      grid-template-columns: 1fr;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .has-two-columns.left-wider:not(.ignore-mobile) {\n      grid-template-columns: 1fr;\n    }\n  }\n  .has-two-columns.right-wider {\n    grid-template-columns: repeat(3, minmax(0, 1fr));\n  }\n  .has-two-columns.right-wider > *:nth-child(2n+1) {\n    grid-column: auto/span 1;\n  }\n  .has-two-columns.right-wider > *:nth-child(2n+2) {\n    grid-column: auto/span 2;\n  }\n  @media only screen and (max-width: 767px) {\n    .has-two-columns.right-wider:not(.ignore-tablet) {\n      grid-template-columns: repeat(2, 1fr);\n    }\n    .has-two-columns.right-wider:not(.ignore-tablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 3;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-two-columns.right-wider:not(.ignore-phablet) {\n      grid-template-columns: 1fr;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .has-two-columns.right-wider:not(.ignore-mobile) {\n      grid-template-columns: 1fr;\n    }\n  }\n  .has-two-columns.left-stack {\n    grid-template: auto/repeat(8, minmax(0, 1fr));\n  }\n  .has-two-columns.left-stack > *:nth-child(1n) {\n    grid-column: auto/span 4;\n    grid-row: auto;\n  }\n  .has-two-columns.left-stack > *:nth-last-child(1) {\n    grid-column: 5/span 4;\n    grid-row: 1/span 3;\n  }\n  @media only screen and (max-width: 767px) {\n    .has-two-columns.left-stack:not(.ignore-tablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 8;\n      grid-row: auto;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-two-columns.left-stack:not(.ignore-phablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 8;\n      grid-row: auto;\n    }\n  }\n  .has-two-columns.right-stack {\n    grid-template: auto/repeat(8, minmax(0, 1fr));\n  }\n  .has-two-columns.right-stack > *:nth-child(1) {\n    grid-column: 1/span 4;\n    grid-row: 1/span 3;\n  }\n  .has-two-columns.right-stack > *:nth-child(n+2) {\n    grid-column: 5/span 4;\n    grid-row: auto/span all;\n  }\n  @media only screen and (max-width: 767px) {\n    .has-two-columns.right-stack:not(.ignore-tablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 8;\n      grid-row: auto;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-two-columns.right-stack:not(.ignore-phablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 8;\n      grid-row: auto;\n    }\n  }\n  .has-two-columns.left-split-stack {\n    grid-template: repeat(3, auto)/repeat(10, minmax(0, 1fr));\n  }\n  .has-two-columns.left-split-stack > *:nth-child(5n+1) {\n    grid-row: 1/span 1;\n    grid-column: 1/span 6;\n  }\n  .has-two-columns.left-split-stack > *:nth-child(5n+2) {\n    grid-row: 2/span 1;\n    grid-column: 1/span 3;\n  }\n  .has-two-columns.left-split-stack > *:nth-child(5n+3) {\n    grid-row: 2/span 1;\n    grid-column: 4/span 3;\n  }\n  .has-two-columns.left-split-stack > *:nth-child(5n+4) {\n    grid-row: 3/span 1;\n    grid-column: 1/span 6;\n  }\n  .has-two-columns.left-split-stack > *:nth-child(5n+5) {\n    grid-row: 1/span 3;\n    grid-column: 7/span 4;\n  }\n  @media only screen and (max-width: 1100px) {\n    .has-two-columns.left-split-stack {\n      grid-template: repeat(3, auto)/repeat(12, 1fr);\n    }\n    .has-two-columns.left-split-stack > *:nth-child(5n+1) {\n      grid-row: 1/span 1;\n      grid-column: 1/span 6;\n    }\n    .has-two-columns.left-split-stack > *:nth-child(5n+2) {\n      grid-column: 1/span 3;\n      grid-row: 2/span 1;\n    }\n    .has-two-columns.left-split-stack > *:nth-child(5n+3) {\n      grid-column: 4/span 3;\n      grid-row: 2/span 1;\n    }\n    .has-two-columns.left-split-stack > *:nth-child(5n+4) {\n      grid-column: 1/span 6;\n      grid-row: 3/span 1;\n    }\n    .has-two-columns.left-split-stack > *:nth-child(5n+5) {\n      grid-column: 7/span 6;\n      grid-row: 1/span 3;\n    }\n  }\n  @media only screen and (max-width: 920px) {\n    .has-two-columns.left-split-stack:not(.ignore-large-tablet) {\n      grid-template: repeat(4, auto)/repeat(2, minmax(100px, 1fr));\n    }\n    .has-two-columns.left-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+1) {\n      grid-column: 1/span 2;\n      grid-row: 4/span 2;\n    }\n    .has-two-columns.left-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+2) {\n      grid-column: 1/span 2;\n      grid-row: 2/span 1;\n    }\n    .has-two-columns.left-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+3) {\n      grid-column: 1/span 1;\n      grid-row: 3/span 1;\n    }\n    .has-two-columns.left-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+4) {\n      grid-column: 2/span 1;\n      grid-row: 3/span 1;\n    }\n    .has-two-columns.left-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+5) {\n      grid-column: 1/span 2;\n      grid-row: 1/span 1;\n    }\n  }\n  .has-two-columns.right-split-stack {\n    grid-template: repeat(3, auto)/repeat(10, minmax(0, 1fr));\n  }\n  .has-two-columns.right-split-stack > *:nth-child(5n+1) {\n    grid-row: 1/-1;\n    grid-column: 1/span 4;\n  }\n  .has-two-columns.right-split-stack > *:nth-child(5n+2) {\n    grid-column: 5/span 6;\n    grid-row: 1/span 1;\n  }\n  .has-two-columns.right-split-stack > *:nth-child(5n+3) {\n    grid-column: 5/span 3;\n    grid-row: 2/span 1;\n  }\n  .has-two-columns.right-split-stack > *:nth-child(5n+4) {\n    grid-column: 8/span 3;\n    grid-row: 2/span 1;\n  }\n  .has-two-columns.right-split-stack > *:nth-child(5n+5) {\n    grid-column: 5/span 6;\n    grid-row: 3/span 1;\n  }\n  @media only screen and (max-width: 1100px) {\n    .has-two-columns.right-split-stack {\n      grid-template: repeat(3, auto)/repeat(12, 1fr);\n    }\n    .has-two-columns.right-split-stack > *:nth-child(5n+1) {\n      grid-row: 1/-1;\n      grid-column: 1/span 6;\n    }\n    .has-two-columns.right-split-stack > *:nth-child(5n+2) {\n      grid-column: 7/span 6;\n      grid-row: 1/span 1;\n    }\n    .has-two-columns.right-split-stack > *:nth-child(5n+3) {\n      grid-column: 7/span 3;\n      grid-row: 2/span 1;\n    }\n    .has-two-columns.right-split-stack > *:nth-child(5n+4) {\n      grid-column: 10/span 3;\n      grid-row: 2/span 1;\n    }\n    .has-two-columns.right-split-stack > *:nth-child(5n+5) {\n      grid-column: 7/span 6;\n      grid-row: 3/span 1;\n    }\n  }\n  @media only screen and (max-width: 920px) {\n    .has-two-columns.right-split-stack:not(.ignore-large-tablet) {\n      grid-template: repeat(4, auto)/repeat(2, minmax(100px, 1fr));\n    }\n    .has-two-columns.right-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+1) {\n      grid-column: 1/span 2;\n      grid-row: 1/span 1;\n    }\n    .has-two-columns.right-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+2) {\n      grid-column: 1/span 2;\n      grid-row: 2/span 1;\n    }\n    .has-two-columns.right-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+3) {\n      grid-column: 1/span 1;\n      grid-row: 3/span 1;\n    }\n    .has-two-columns.right-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+4) {\n      grid-column: 2/span 1;\n      grid-row: 3/span 1;\n    }\n    .has-two-columns.right-split-stack:not(.ignore-large-tablet) > *:nth-child(5n+5) {\n      grid-column: 1/span 2;\n      grid-row: 4/span 2;\n    }\n  }\n\n  .has-three-columns {\n    display: grid;\n    grid-template-columns: repeat(3, 1fr);\n  }\n  @media only screen and (max-width: 920px) {\n    .has-three-columns:not(.ignore-large-tablet) {\n      grid-template-columns: repeat(2, 1fr);\n    }\n    .has-three-columns:not(.ignore-large-tablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 1;\n    }\n    .has-three-columns:not(.ignore-large-tablet) > *:nth-last-child(1) {\n      grid-column: auto/span 2;\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .has-three-columns:not(.ignore-tablet) {\n      grid-template-columns: repeat(1, 1fr);\n    }\n    .has-three-columns:not(.ignore-tablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 1;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .has-three-columns:not(.ignore-mobile) {\n      grid-template-columns: repeat(1, 1fr);\n    }\n  }\n  .has-three-columns.left-wide {\n    grid-template: auto/repeat(8, 1fr);\n  }\n  .has-three-columns.left-wide > *:nth-child(3n+1) {\n    grid-column: auto/span 4;\n  }\n  .has-three-columns.left-wide > *:nth-child(3n+2) {\n    grid-column: auto/span 2;\n  }\n  .has-three-columns.left-wide > *:nth-child(3n+3) {\n    grid-column: auto/span 2;\n  }\n  @media only screen and (max-width: 1000px) {\n    .has-three-columns.left-wide:not(.ignore-medium) > *:nth-child(3n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.left-wide:not(.ignore-medium) > *:nth-child(3n+2) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.left-wide:not(.ignore-medium) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 920px) {\n    .has-three-columns.left-wide > *:nth-child(3n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.left-wide > *:nth-child(3n+2) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.left-wide > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide:not(.ignore-large-tablet) > *:nth-child(3n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.left-wide:not(.ignore-large-tablet) > *:nth-child(3n+2) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.left-wide:not(.ignore-large-tablet) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .has-three-columns.left-wide > *:nth-child(3n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.left-wide > *:nth-child(3n+2) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.left-wide > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide:not(.ignore-tablet) > *:nth-child(3n+1) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide:not(.ignore-tablet) > *:nth-child(3n+2) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide:not(.ignore-tablet) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-three-columns.left-wide:not(.ignore-phablet) > *:nth-child(3n+1) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide:not(.ignore-phablet) > *:nth-child(3n+2) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide:not(.ignore-phablet) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .has-three-columns.left-wide:not(.ignore-mobile) > *:nth-child(3n+1) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide:not(.ignore-mobile) > *:nth-child(3n+2) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide:not(.ignore-mobile) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 375px) {\n    .has-three-columns.left-wide > *:nth-child(3n+1) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide > *:nth-child(3n+2) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.left-wide > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  .has-three-columns.right-wide {\n    grid-template: 1fr/repeat(8, 1fr);\n  }\n  .has-three-columns.right-wide > *:nth-child(3n+1) {\n    grid-column: auto/span 2;\n  }\n  .has-three-columns.right-wide > *:nth-child(3n+2) {\n    grid-column: auto/span 2;\n  }\n  .has-three-columns.right-wide > *:nth-child(3n+3) {\n    grid-column: auto/span 4;\n  }\n  @media only screen and (max-width: 1000px) {\n    .has-three-columns.right-wide:not(.ignore-medium) > *:nth-child(3n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.right-wide:not(.ignore-medium) > *:nth-child(3n+2) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.right-wide:not(.ignore-medium) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 920px) {\n    .has-three-columns.right-wide > *:nth-child(3n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.right-wide > *:nth-child(3n+2) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.right-wide > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide:not(.ignore-large-tablet) > *:nth-child(3n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.right-wide:not(.ignore-large-tablet) > *:nth-child(3n+2) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.right-wide:not(.ignore-large-tablet) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .has-three-columns.right-wide > *:nth-child(3n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.right-wide > *:nth-child(3n+2) {\n      grid-column: auto/span 4;\n    }\n    .has-three-columns.right-wide > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide:not(.ignore-tablet) > *:nth-child(3n+1) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide:not(.ignore-tablet) > *:nth-child(3n+2) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide:not(.ignore-tablet) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-three-columns.right-wide:not(.ignore-phablet) > *:nth-child(3n+1) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide:not(.ignore-phablet) > *:nth-child(3n+2) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide:not(.ignore-phablet) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .has-three-columns.right-wide:not(.ignore-mobile) > *:nth-child(3n+1) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide:not(.ignore-mobile) > *:nth-child(3n+2) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide:not(.ignore-mobile) > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  @media only screen and (max-width: 375px) {\n    .has-three-columns.right-wide > *:nth-child(3n+1) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide > *:nth-child(3n+2) {\n      grid-column: auto/span 8;\n    }\n    .has-three-columns.right-wide > *:nth-child(3n+3) {\n      grid-column: auto/span 8;\n    }\n  }\n  .has-three-columns.featuredPost {\n    grid-template-columns: repeat(3, 1fr);\n  }\n  .has-three-columns.featuredPost *:nth-child(1) {\n    grid-column: 1/-1;\n  }\n  .has-three-columns.featuredPost *:nth-child(1).card {\n    display: grid;\n    grid-template-columns: repeat(10, 1fr);\n    column-gap: inherit;\n  }\n  @media only screen and (max-width: 767px) {\n    .has-three-columns.featuredPost *:nth-child(1).card:not(.ignore-tablet) > *:nth-child(2n+1) {\n      grid-column: auto/span 10;\n    }\n    .has-three-columns.featuredPost *:nth-child(1).card:not(.ignore-tablet) > *:nth-child(2n+2) {\n      grid-column: auto/span 10;\n      grid-row: 2;\n    }\n  }\n  .has-three-columns.featuredPost *:nth-child(1).card .imglink {\n    grid-column: 5/span 6;\n    grid-row: 1;\n  }\n  .has-three-columns.featuredPost *:nth-child(1).card .inner {\n    grid-column: 1/span 4;\n    grid-row: 1;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-content: center;\n  }\n  @media only screen and (max-width: 920px) {\n    .has-three-columns.featuredPost:not(.ignore-large-tablet) {\n      grid-template-columns: repeat(2, 1fr);\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-three-columns.featuredPost:not(.ignore-mobile) {\n      grid-template-columns: repeat(1, 1fr);\n    }\n  }\n\n  .has-four-columns {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(170px, 1fr));\n  }\n  .has-four-columns.grid-four {\n    grid-template: repeat(2, auto)/repeat(2, minmax(0, 1fr));\n  }\n  @media only screen and (max-width: 575px) {\n    .has-four-columns.grid-four:not(.ignore-phablet) {\n      grid-template-columns: 1fr;\n    }\n  }\n  @media only screen and (max-width: 480px) {\n    .has-four-columns.grid-four.ignore-phablet {\n      grid-template-columns: 1fr;\n    }\n  }\n  .has-four-columns.uneven-grid {\n    grid-template: repeat(3, auto)/repeat(2, minmax(0, 1fr));\n  }\n  .has-four-columns.uneven-grid > *:nth-child(4n+1) {\n    grid-row: 1/span 1;\n    grid-column: 1/span 1;\n  }\n  .has-four-columns.uneven-grid > *:nth-child(4n+2) {\n    grid-row: 1/span 2;\n    grid-column: 2/span 1;\n  }\n  .has-four-columns.uneven-grid > *:nth-child(4n+3) {\n    grid-row: 2/span 2;\n    grid-column: 1/span 1;\n  }\n  .has-four-columns.uneven-grid > *:nth-child(4n+4) {\n    grid-row: 3/span 1;\n    grid-column: 2/span 1;\n  }\n  @media only screen and (max-width: 920px) {\n    .has-four-columns.uneven-grid:not(.ignore-large-tablet) {\n      grid-template-columns: 1fr;\n    }\n    .has-four-columns.uneven-grid:not(.ignore-large-tablet) > *:nth-child(1n+1) {\n      grid-row: auto/span 1;\n      grid-column: 1/span 1;\n    }\n  }\n  .has-four-columns.uneven-grid-flipped {\n    grid-template: repeat(3, auto)/repeat(2, minmax(0, 1fr));\n  }\n  .has-four-columns.uneven-grid-flipped > *:nth-child(4n+1) {\n    grid-row: 1/span 2;\n    grid-column: 1/span 1;\n  }\n  .has-four-columns.uneven-grid-flipped > *:nth-child(4n+2) {\n    grid-row: 1/span 1;\n    grid-column: 2/span 1;\n  }\n  .has-four-columns.uneven-grid-flipped > *:nth-child(4n+3) {\n    grid-row: 3/span 1;\n    grid-column: 1/span 1;\n  }\n  .has-four-columns.uneven-grid-flipped > *:nth-child(4n+4) {\n    grid-row: 2/span 2;\n    grid-column: 2/span 1;\n  }\n  .has-five-columns {\n    grid-template: repeat(1, auto)/repeat(5, 1fr);\n  }\n  @media only screen and (max-width: 1000px) {\n    .has-five-columns:not(.ignore-medium) {\n      grid-template: auto/repeat(12, 1fr);\n    }\n    .has-five-columns:not(.ignore-medium) > *:nth-child(1n+1) {\n      grid-column: auto/span 4;\n    }\n    .has-five-columns:not(.ignore-medium) > *:nth-child(5n+4) {\n      grid-column: 3/span 4;\n    }\n    .has-five-columns:not(.ignore-medium) > *:nth-child(5n+5) {\n      grid-column: auto/span 4;\n    }\n  }\n  @media only screen and (max-width: 920px) {\n    .has-five-columns:not(.ignore-large-tablet) {\n      grid-template: auto/repeat(4, 1fr);\n    }\n    .has-five-columns:not(.ignore-large-tablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 2;\n    }\n    .has-five-columns:not(.ignore-large-tablet) > *:nth-last-child(1) {\n      grid-column: auto/span 4;\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .has-five-columns:not(.ignore-tablet) {\n      grid-template: auto/repeat(2, 1fr);\n    }\n    .has-five-columns:not(.ignore-tablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 2;\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-five-columns:not(.ignore-phablet) {\n      grid-template: auto/repeat(2, 1fr);\n    }\n    .has-five-columns:not(.ignore-phablet) > *:nth-child(1n+1) {\n      grid-column: auto/span 2;\n    }\n  }\n  .has-five-columns.grid-left {\n    grid-template: repeat(3, auto)/repeat(4, auto);\n  }\n  .has-five-columns.grid-left > *:nth-child(5n+1) {\n    grid-column: 1/span 2;\n    grid-row: 1/span 1;\n  }\n  .has-five-columns.grid-left > *:nth-child(5n+2) {\n    grid-column: 1/span 1;\n    grid-row: 2/span 1;\n  }\n  .has-five-columns.grid-left > *:nth-child(5n+3) {\n    grid-column: 2/span 1;\n    grid-row: 2/span 1;\n  }\n  .has-five-columns.grid-left > *:nth-child(5n+4) {\n    grid-column: 1/span 2;\n    grid-row: 3/span 1;\n  }\n  .has-five-columns.grid-left > *:nth-child(5n+5) {\n    grid-column: 3/span 2;\n    grid-row: 1/span 3;\n  }\n  @media only screen and (max-width: 920px) {\n    .has-five-columns.grid-left > *:nth-child(5n+1) {\n      grid-column: 1/span 4;\n      grid-row: 2/span 2;\n    }\n    .has-five-columns.grid-left > *:nth-child(5n+2) {\n      grid-column: 1/span 2;\n      grid-row: 4/span 1;\n    }\n    .has-five-columns.grid-left > *:nth-child(5n+3) {\n      grid-column: 3/span 2;\n      grid-row: 4/span 1;\n    }\n    .has-five-columns.grid-left > *:nth-child(5n+4) {\n      grid-column: 1/span 4;\n      grid-row: 5/span 1;\n    }\n    .has-five-columns.grid-left > *:nth-child(5n+5) {\n      grid-column: 1/span 4;\n      grid-row: 1/span 1;\n    }\n  }\n\n  .has-six-columns {\n    grid-template: repeat(1, auto)/repeat(6, 1fr);\n  }\n  @media only screen and (max-width: 1100px) {\n    .has-six-columns:not(.ignore-large-medium) {\n      grid-template: repeat(2, auto)/repeat(3, 1fr);\n    }\n  }\n  @media only screen and (max-width: 1000px) {\n    .has-six-columns:not(.ignore-medium) {\n      grid-template: repeat(2, auto)/repeat(2, 1fr);\n    }\n  }\n  @media only screen and (max-width: 767px) {\n    .has-six-columns:not(.ignore-tablet) {\n      grid-template: repeat(3, auto)/repeat(1, 1fr);\n    }\n  }\n  @media only screen and (max-width: 575px) {\n    .has-six-columns:not(.ignore-mobile) {\n      grid-template: repeat(6, auto)/1fr;\n    }\n  }\n}","// MEDIA QUERIES - /_utilities/_mixins/_media_query.scss\n\n@use \"../../_abstracts/breakpoints\" as *;\n\n@mixin mq($key) {\n  $size: map-get($breakpoints, $key);\n  @media only screen and (max-width: $size) {\n    @content;\n  }\n}\n@mixin mq-min($key) {\n  $size: map-get($breakpoints, $key);\n  @media only screen and (min-width: $size) {\n    @content;\n  }\n}\n","/// Select all children from the first to `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin first($num) {\n  @if $num == 1 {\n    &:first-child {\n      @content;\n    }\n  } @else {\n    &:nth-child(-n + #{$num}) {\n      @content;\n    }\n  }\n}\n\n/// Select all children from the last to `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin last($num) {\n  &:nth-last-child(-n + #{$num}) {\n    @content;\n  }\n}\n\n/// Select all children after the first to `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin after-first($num) {\n  &:nth-child(n + #{$num + 1}) {\n    @content;\n  }\n}\n\n/// Select all children before `$num` from the last.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin from-end($num) {\n  &:nth-last-child(#{$num}) {\n    @content;\n  }\n}\n\n/// Select all children between `$first` and `$last`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin between($first, $last) {\n  &:nth-child(n + #{$first}):nth-child(-n + #{$last}) {\n    @content;\n  }\n}\n\n/// Select all even children between `$first` and `$last`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin even-between($first, $last) {\n  &:nth-child(even):nth-child(n + #{$first}):nth-child(-n + #{$last}) {\n    @content;\n  }\n}\n\n/// Select all odd children between `$first` and `$last`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin odd-between($first, $last) {\n  &:nth-child(odd):nth-child(n + #{$first}):nth-child(-n + #{$last}) {\n    @content;\n  }\n}\n\n/// Select all `$num` children between `$first` and `$last`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin n-between($num, $first, $last) {\n  &:nth-child(#{$num}n):nth-child(n + #{$first}):nth-child(-n + #{$last}) {\n    @content;\n  }\n}\n\n\n/// Select all children but `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin all-but($num) {\n  &:not(:nth-child(#{$num})) {\n    @content;\n  }\n}\n\n/// Select children each `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n/// @alias every\n@mixin each($num) {\n  &:nth-child(#{$num}n) {\n    @content;\n  }\n}\n\n/// Select children each `$num`.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin every($num) {\n  &:nth-child(#{$num}n) {\n    @content;\n  }\n}\n\n/// Select the `$num` child from the start and the `$num` child from the last.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin from-first-last($num) {\n  &:nth-child(#{$num}),\n  &:nth-last-child(#{$num}) {\n    @content;\n  }\n}\n\n\n/// Select the item in the middle of `$num` child. Only works with odd number\n/// chain.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin middle($num) {\n  &:nth-child(#{round($num / 2)}) {\n    @content;\n  }\n}\n\n\n/// Select all children between the `$num` first and the `$num` last.\n/// @group with-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - id of the child\n@mixin all-but-first-last($num) {\n  &:nth-child(n + #{$num}):nth-last-child(n + #{$num}) {\n    @content;\n  }\n}\n\n\n/// This quantity-query mixin will only select the first of `$limit` items. It will not\n/// work if there is not as much as item as you set in `$limit`.\n/// @group Quantity queries\n/// @param {number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin first-of($limit) {\n  &:nth-last-child(#{$limit}):first-child {\n    @content;\n  }\n}\n\n/// This quantity-query mixin will only select the last of `$limit` items. It will not\n/// if there is not as much as item as you set in `$limit`.\n/// @group Quantity queries\n/// @param {number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin last-of($limit) {\n  &:nth-of-type(#{$limit}):nth-last-of-type(1) {\n    @content;\n  }\n}\n\n/// This quantity-query mixin will select every items if there is at least `$num` items. It will not\n/// if there is not as much as item as you set in `$num`.\n/// @group Quantity queries\n/// @param {number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin at-least($num) {\n  $selector: &;\n  $child: nth(nth($selector, -1), -1);\n\n  &:nth-last-child(n + #{$num}),\n  &:nth-last-child(n + #{$num}) ~ #{$child} {\n    @content;\n  }\n}\n\n/// This quantity-query mixin will select every items if there is at most `$num` items. It will not\n/// if there is not as much as item as you set in `$num`.\n/// @group Quantity queries\n/// @param {number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin at-most($num) {\n  $selector: &;\n  $child: nth(nth($selector, -1), -1);\n\n  &:nth-last-child(-n + #{$num}):first-child,\n  &:nth-last-child(-n + #{$num}):first-child ~ #{$child} {\n    @content;\n  }\n}\n\n/// This quantity-query mixin will select every items only if there is between `$min` and `$max` items.\n/// @group Quantity queries\n/// @param {number} $limit\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin in-between($min, $max) {\n  $selector: &;\n  $child: nth(nth($selector, -1), -1);\n\n  &:nth-last-child(n + #{$min}):nth-last-child(-n + #{$max}):first-child,\n  &:nth-last-child(n + #{$min}):nth-last-child(-n + #{$max}):first-child ~ #{$child} {\n    @content;\n  }\n}\n\n/// Select the first exact child\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin first-child() {\n  &:first-of-type {\n    @content\n  }\n}\n\n/// Select the last exact child\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin last-child() {\n  &:last-of-type {\n    @content\n  }\n}\n\n/// Select all even children.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin even() {\n  &:nth-child(even) {\n    @content;\n  }\n}\n\n/// Select all odd children.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin odd() {\n  &:nth-child(odd) {\n    @content;\n  }\n}\n\n/// Select only the first and last child.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin first-last() {\n  &:first-child,\n  &:last-child {\n    @content;\n  }\n}\n\n/// Will only select the child if it’s unique.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @alias only\n@mixin unique() {\n  &:only-child {\n    @content;\n  }\n}\n\n/// Will only select the child if it’s unique.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin only() {\n  &:only-child {\n    @content;\n  }\n}\n\n/// Will only select children if they are not unique. Meaning if there is at\n/// least 2 children, the style is applied.\n/// @group no-arguments\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n@mixin not-unique() {\n  &:not(:only-child) {\n    @content;\n  }\n}\n\n\n/// This mixin is used to automatically sort z-index in numerical order. But it\n/// can also sort them in anti-numerical order, depending the parameters you use.\n/// @group using functions\n/// @content [Write the style you want to apply to the children, and it will be added within the @content directive]\n/// @param {number} $num - Number of children\n/// @param {string} $direction [forward] - Direction of the sort\n/// @param {number} $index [0] - Index of the sorting\n@mixin child-index($num, $direction: 'forward', $index: 0) {\n  @for $i from 1 through $num {\n    @if ($direction == 'forward') {\n      &:nth-child(#{$i}) {\n        z-index: order-index($i, $index);\n        @content;\n      }\n    } @else if ($direction == 'backward') {\n      &:nth-last-child(#{$i}) {\n        z-index: order-index($i, $index);\n        @content;\n      }\n    }\n  }\n}\n\n/// Used by the child-index mixin. It will returned the proper sorted numbers\n/// depending on the `$index` value.\n/// @access private\n/// @param {number} $num - Number of children\n/// @param {number} $index - Index of the sorting\n@function order-index($i, $index) {\n  @return ($index + $i);\n}\n// PX to REM - Usage: font-size: rem(37px);\n@function rem($px, $base: $base-font-size) {\n  @return ($px / $base) * 1rem;\n}\n"]}